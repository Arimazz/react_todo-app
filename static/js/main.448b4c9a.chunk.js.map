{"version":3,"sources":["components/TodoItem/TodoItem.js","components/TodoList/TodoList.js","components/Footer/Footer.js","components/NewTodo/NewTodo.js","components/api/todosFromServer.js","App.js","index.js"],"names":["TodoItem","props","id","title","completed","toggleCompleted","deletetask","className","type","checked","onChange","htmlFor","onClick","TodoList","PropTypes","string","isRequired","bool","todos","map","todo","key","Footer","state","selectedButton","all","active","handleClick","name","target","setFilterProp","setState","prevState","Object","keys","reduce","acc","this","clearCompleted","uncompletedTasksCount","filter","length","href","React","Component","NewTodo","inputValue","inputError","handleInputChange","value","trimStart","handleSubmit","event","preventDefault","addTask","uuidv4","onSubmit","placeholder","todosFromServer","App","filterProp","newTask","toggleAllCompleted","visibleTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.448b4c9a.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const TodoItem = (props) => {\n  const { id, title, completed, toggleCompleted, deletetask } = props;\n\n  return (\n    <li className={completed ? 'completed' : ''}>\n      <div className=\"view\">\n        <input\n          id={id}\n          type=\"checkbox\"\n          className=\"toggle\"\n          checked={completed}\n          onChange={() => toggleCompleted(id)}\n        />\n        <label htmlFor={id}>{title}</label>\n        <button\n          type=\"button\"\n          className=\"destroy\"\n          onClick={() => deletetask(id)}\n        />\n      </div>\n    </li>\n  );\n};\n\nexport const TodoItemProps = {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  completed: PropTypes.bool.isRequired,\n};\n\nTodoItem.propTypes = {\n  ...TodoItemProps,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TodoItem, TodoItemProps } from '../TodoItem/TodoItem';\n\nexport const TodoList = ({ todos, toggleCompleted, deletetask }) => (\n  <ul className=\"todo-list\">\n    {todos.map(todo => (\n      <TodoItem\n        key={todo.id}\n        id={todo.id}\n        title={todo.title}\n        deletetask={deletetask}\n        completed={todo.completed}\n        toggleCompleted={toggleCompleted}\n      />\n    ))}\n  </ul>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      ...TodoItemProps,\n    }),\n  ).isRequired,\n  toggleCompleted: PropTypes.func.isRequired,\n  deletetask: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport class Footer extends React.Component {\n  state = {\n    selectedButton: {\n      all: true,\n      active: false,\n      completed: false,\n    },\n  }\n\n  handleClick = ({ target: { name } }) => {\n    this.props.setFilterProp(name);\n    this.setState(prevState => ({\n      selectedButton: Object.keys(prevState.selectedButton)\n        .reduce((acc, key) => ({\n          ...acc,\n          [key]: key === name,\n        }), {}),\n    }));\n  }\n\n  render() {\n    const { todos, clearCompleted } = this.props;\n    const { all, active, completed } = this.state.selectedButton;\n    const uncompletedTasksCount = todos\n      .filter(todo => !todo.completed).length;\n\n    return (\n      <footer className=\"footer\">\n\n        <span className=\"todo-count\">\n          {uncompletedTasksCount}\n          {' '}\n            items left\n        </span>\n\n        <ul className=\"filters\">\n          <li>\n            <a\n              href=\"#/\"\n              name=\"all\"\n              onClick={this.handleClick}\n              className={all ? 'selected' : ''}\n            >\n              All\n            </a>\n          </li>\n\n          <li>\n            <a\n              name=\"active\"\n              href=\"#/active\"\n              onClick={this.handleClick}\n              className={active ? 'selected' : ''}\n            >\n              Active\n            </a>\n          </li>\n\n          <li>\n            <a\n              name=\"completed\"\n              href=\"#/completed\"\n              onClick={this.handleClick}\n              className={completed ? 'selected' : ''}\n            >\n              Completed\n            </a>\n          </li>\n        </ul>\n\n        <button\n          type=\"button\"\n          onClick={clearCompleted}\n          className=\"clear-completed\"\n        >\n          Clear completed\n        </button>\n      </footer>\n    );\n  }\n}\n\nFooter.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string,\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n  })).isRequired,\n  setFilterProp: PropTypes.func.isRequired,\n  clearCompleted: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport PropTypes from 'prop-types';\n\nexport class NewTodo extends React.Component {\n  state = {\n    inputValue: '',\n    inputError: false,\n  }\n\n  handleInputChange = ({ target: { value } }) => {\n    this.setState({\n      inputValue: value.trimStart(),\n    });\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    if (this.state.inputValue !== '') {\n      this.props.addTask({\n        id: uuidv4(),\n        title: this.state.inputValue,\n        completed: false,\n      });\n      this.setState({\n        inputValue: '',\n        inputError: false,\n      });\n    } else {\n      this.setState({\n        inputError: true,\n      });\n    }\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <input\n          className=\"new-todo\"\n          placeholder={this.state.inputError\n            ? 'Enter valid Task' : 'What needs to be done?'}\n          onChange={this.handleInputChange}\n          value={this.state.inputValue}\n        />\n      </form>\n    );\n  }\n}\n\nNewTodo.propTypes = {\n  addTask: PropTypes.func.isRequired,\n};\n","/* eslint-disable no-unused-vars */\n/* eslint-disable react/react-in-jsx-scope */\nimport { v4 as uuidv4 } from 'uuid';\nimport React from 'react';\n\nexport const todosFromServer = [\n  {\n    id: uuidv4(), title: 'task 1', completed: false,\n  },\n  {\n    id: uuidv4(), title: 'task 2', completed: false,\n  },\n  {\n    id: uuidv4(), title: 'task 3', completed: false,\n  },\n];\n\nconst template = (\n  <ul className=\"todo-list\">\n    <li>\n      <div className=\"view\">\n        <input type=\"checkbox\" className=\"toggle\" id=\"todo-1\" />\n        <label htmlFor=\"todo-1\">asdfghj</label>\n        <button type=\"button\" className=\"destroy\" />\n      </div>\n      <input type=\"text\" className=\"edit\" />\n    </li>\n\n    <li className=\"completed\">\n      <div className=\"view\">\n        <input type=\"checkbox\" className=\"toggle\" id=\"todo-2\" />\n        <label htmlFor=\"todo-2\">qwertyuio</label>\n        <button type=\"button\" className=\"destroy\" />\n      </div>\n      <input type=\"text\" className=\"edit\" />\n    </li>\n\n    <li>\n      <div className=\"view\">\n        <input type=\"checkbox\" className=\"toggle\" id=\"todo-4\" />\n        <label htmlFor=\"todo-4\">1234567890</label>\n        <button type=\"button\" className=\"destroy\" />\n      </div>\n      <input type=\"text\" className=\"edit\" />\n    </li>\n  </ul>\n);\n","import React from 'react';\nimport { TodoList } from './components/TodoList/TodoList';\nimport { Footer } from './components/Footer/Footer';\nimport { NewTodo } from './components/NewTodo/NewTodo';\nimport { todosFromServer } from './components/api/todosFromServer';\n\nclass App extends React.Component {\n  state = {\n    todos: [...todosFromServer],\n    filterProp: 'all',\n  }\n\n  addTask = (newTask) => {\n    this.setState(prevState => ({\n      todos: [...prevState.todos, newTask],\n    }));\n  }\n\n  toggleCompleted = (id) => {\n    this.setState(prevState => ({\n      todos: prevState.todos.map(todo => (todo.id === id ? {\n        ...todo, completed: !todo.completed,\n      } : todo)),\n    }));\n  }\n\n  deletetask = (id) => {\n    this.setState(prevState => ({\n      todos: prevState.todos.filter(todo => todo.id !== id),\n    }));\n  }\n\n  filter = (todos, filterProp) => {\n    switch (filterProp) {\n      case 'all':\n        return todos;\n\n      case 'active':\n        return todos.filter(todo => !todo.completed);\n\n      case 'completed':\n        return todos.filter(todo => todo.completed);\n\n      default:\n        return todos;\n    }\n  }\n\n  setFilterProp = (filterProp) => {\n    this.setState({\n      filterProp,\n    });\n  }\n\n  clearCompleted = () => {\n    this.setState(prevState => ({\n      todos: prevState.todos.filter(todo => !todo.completed),\n    }));\n  }\n\n  toggleAllCompleted = () => {\n    this.setState(prevState => ({\n      todos: prevState.todos.map(todo => ({\n        ...todo, completed: !todo.completed,\n      })),\n    }));\n  }\n\n  render() {\n    const { todos, filterProp } = this.state;\n    const visibleTodos = this.filter(todos, filterProp);\n\n    return (\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>todos</h1>\n\n          <NewTodo addTask={this.addTask} />\n        </header>\n\n        <section className=\"main\">\n          <input\n            type=\"checkbox\"\n            id=\"toggle-all\"\n            className=\"toggle-all\"\n            onClick={this.toggleAllCompleted}\n          />\n          <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n          <TodoList\n            todos={visibleTodos}\n            deletetask={this.deletetask}\n            toggleCompleted={this.toggleCompleted}\n          />\n        </section>\n\n        <Footer\n          todos={this.state.todos}\n          setFilterProp={this.setFilterProp}\n          clearCompleted={this.clearCompleted}\n        />\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}